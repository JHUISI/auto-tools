
(*Dodis VRF constrution when L = 8
https://link.springer.com/content/pdf/10.1007%2F3-540-36288-6_1.pdf*)

maps G1 * G1 -> GT.


(*verification key*)
trusted_polys [F1 = a1*a9, F2 = a2*a9, F3 = a3*a9, F4 = a4*a9, F5 = a5*a9, F6 = a6*a9, F7 = a7*a9, F8 = a8*a9, F9 = a9] in G1.

trusted_polys [F10 = a1*a9*x1, F11 = a2*a9*x2, F12 = a3*a9*x3, F13 = a4*a9*x4, F14 = a5*a9*x5, F15 = a6*a9*x6, F16 = a7*a9*x7, F17 = a8*a9*x8] in G1.

trusted_polys [F26 = x1, F27 = x2, F28 = x3, F29 = x4, F30 = x5, F31 = x6, F32 = x7, F33 = x8] in G1.


(*proof*)
untrusted_polys [F18 = (a1*x1 + (1-x1))] in G1.

untrusted_polys [F19 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2))] in G1.

untrusted_polys [F20 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3))] in G1.

untrusted_polys [F21 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3)) * (a4*x4 + (1-x4))] in G1.

untrusted_polys [F22 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3)) * (a4*x4 + (1-x4)) * (a5*x5 + (1-x5))] in G1.

untrusted_polys [F23 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3)) * (a4*x4 + (1-x4)) * (a5*x5 + (1-x5)) * (a6*x6 + (1-x6))] in G1.

untrusted_polys [F24 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3)) * (a4*x4 + (1-x4)) * (a5*x5 + (1-x5)) * (a6*x6 + (1-x6)) * (a7*x7 + (1-x7))] in G1.

(*VRF value*)
untrusted_polys [F25 = (a1*x1 + (1-x1)) * (a2*x2 + (1-x2)) * (a3*x3 + (1-x3)) * (a4*x4 + (1-x4)) * (a5*x5 + (1-x5)) * (a6*x6 + (1-x6)) * (a7*x7 + (1-x7)) * (a8*x8 + (1-x8))] in G1.

